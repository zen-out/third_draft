const { see } = require("code_clarity")
const { upset } = require("whats_wrong")
const express = require("express")
const noobs = require("backend_for_noobs")
const router = express.Router()
const { verifyLogin } = require("./middleware")

const { knex } = require("./knex")


router.get("/api/user/:user_id/created/:table", verifyLogin, async(req, res, next) => {
    let user_id = parseInt(req.params.user_id)
    let results;
    let table = req.params.table.trim().toLowerCase()
    try {
        if (table === "problem") {
            results = await noobs.mostRecentlyCreatedProblems(knex, user_id)
        } else if (table === "cheatsheet") {
            results = await noobs.mostRecentlyCreatedCheatsheets(knex, user_id)
        } else if (table === "tag_snippet") {
            results = await noobs.mostRecentlyCreatedTagSnippets(knex, user_id)
        } else if (table === "task") {
            results = await noobs.mostRecentTasks(knex, user_id)
        }
    } catch (error) {
        res.send(upset("get", "get.js", "should be able to get problems")).status(400)
    }
    res.send(results).status(200)
})

router.get("/api/user/:user_id/important/:table", verifyLogin, async(req, res, next) => {
    let user_id = parseInt(req.params.user_id)
    let results;
    let table = req.params.table.trim().toLowerCase()
    try {
        if (table === "problem") {
            results = await noobs.importantProblems(knex, user_id)
        } else if (table === "cheatsheet") {
            results = await noobs.importantCheatsheets(knex, user_id)
        } else if (table === "tag_snippet") {
            results = await noobs.importantTagSnippets(knex, user_id)
        } else if (table === "task") {
            results = await noobs.importantTasks(knex, user_id)
        }
    } catch (error) {
        res.send(upset("get", "get.js", "should be able to get problems")).status(400)
    }
    res.send(results).status(200)
})

router.get("/api/user/:user_id/end/:table", async(req, res, next) => {
    let user_id = parseInt(req.params.user_id)
    let results;
    let table = req.params.table.trim().toLowerCase()
    try {
        if (table === "problem") {
            results = await noobs.deadlineProblems(knex, user_id)
        } else if (table === "cheatsheet") {
            results = await noobs.deadlineCheatsheets(knex, user_id)
        } else if (table === "tag_snippet") {
            results = await noobs.deadlineTagSnippets(knex, user_id)
        } else if (table === "task") {
            results = await noobs.deadlineTasks(knex, user_id)
        }
    } catch (error) {
        res.send(upset("get", "get.js", "should be able to get problems")).status(400)
    }
    res.send(results).status(200)
})



router.get("/api/user/:user_id/edit/:table", async(req, res, next) => {
    let user_id = parseInt(req.params.user_id)
    let results;
    let table = req.params.table.trim().toLowerCase()
    try {
        if (table === "problem") {
            results = await noobs.mostRecentProblems(knex, user_id)
        } else if (table === "cheatsheet") {
            results = await noobs.mostRecentCheatsheets(knex, user_id)
        } else if (table === "tag_snippet") {
            results = await noobs.mostRecentTagSnippets(knex, user_id)
        } else if (table === "task") {
            results = await noobs.mostRecentTasks(knex, user_id)
        }
    } catch (error) {
        res.send(upset("get", "get.js", "should be able to get problems")).status(400)
    }
    res.send(results).status(200)
})


router.get("/api/user/:user_id/difficult/:table", async(req, res, next) => {
    let user_id = parseInt(req.params.user_id)
    let results;
    let table = req.params.table.trim().toLowerCase()
    try {
        if (table === "problem") {
            results = await noobs.difficultProblems(knex, user_id)
        } else if (table === "cheatsheet") {
            results = await noobs.difficultCheatsheets(knex, user_id)
        } else if (table === "tag_snippet") {
            results = await noobs.difficultTagSnippets(knex, user_id)
        } else if (table === "task") {
            results = await noobs.difficultTasks(knex, user_id)
        }
    } catch (error) {
        res.send(upset("get", "get.js", "should be able to get problems")).status(400)
    }
    res.send(results).status(200)
})



router.get("/api/user/:user_id/public/:table", async(req, res, next) => {
    let user_id = parseInt(req.params.user_id)
    let results;
    let table = req.params.table.trim().toLowerCase()
    try {
        if (table === "problem") {
            results = await noobs.getAllPublicProblems(knex, user_id)
        } else if (table === "cheatsheet") {
            results = await noobs.getAllPublicCheatsheets(knex, user_id)
        } else if (table === "tag_snippet") {
            results = await noobs.getAllPublicTagSnippets(knex, user_id)
        } else if (table === "task") {
            results = await noobs.getAllPublicTasks(knex, user_id)
        }
    } catch (error) {
        res.send(upset("get", "get.js", "should be able to get problems")).status(400)
    }
    res.send(results).status(200)
})



router.get("/api/user/:user_id/seconds/:table", async(req, res, next) => {
    let user_id = parseInt(req.params.user_id)
    let results;
    let table = req.params.table.trim().toLowerCase()
    try {
        if (table === "problem") {
            results = await noobs.timeSpentOnProblems(knex, user_id)
        } else if (table === "cheatsheet") {
            results = await noobs.timeSpentOnCheatsheets(knex, user_id)
        } else if (table === "tag_snippet") {
            results = await noobs.timeSpentOnTagSnippets(knex, user_id)
        } else if (table === "task") {
            results = await noobs.timeSpentOnTasks(knex, user_id)
        }
    } catch (error) {
        res.send(upset("get", "get.js", "should be able to get problems")).status(400)
    }
    res.send(results).status(200)
})

router.get("/api/user/:user_id/usefulness/:table", async(req, res, next) => {
    let user_id = parseInt(req.params.user_id)
    let results;
    let table = req.params.table.trim().toLowerCase()
    try {
        if (table === "problem") {
            results = await noobs.usefulProblems(knex, user_id)
        } else if (table === "cheatsheet") {
            results = await noobs.usefulCheatsheets(knex, user_id)
        } else if (table === "tag_snippet") {
            results = await noobs.usefulTagSnippets(knex, user_id)
        } else if (table === "task") {
            results = await noobs.usefulTasks(knex, user_id)
        }
    } catch (error) {
        res.send(upset("get", "get.js", "should be able to get problems")).status(400)
    }
    res.send(results).status(200)
})

router.get("/api/user/:user_id/joy/:table", async(req, res, next) => {
    let user_id = parseInt(req.params.user_id)
    let results;
    let table = req.params.table.trim().toLowerCase()
    try {
        if (table === "problem") {
            results = await noobs.masterProblems(knex, user_id)
        } else if (table === "cheatsheet") {
            results = await noobs.masterCheatsheets(knex, user_id)
        } else if (table === "tag_snippet") {
            results = await noobs.masterTagSnippets(knex, user_id)
        } else if (table === "task") {
            results = await noobs.masterTasks(knex, user_id)
        }
    } catch (error) {
        res.send(upset("get", "get.js", "should be able to get problems")).status(400)
    }
    res.send(results).status(200)
})





module.exports = router