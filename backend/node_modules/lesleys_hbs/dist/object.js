const arrz = require("array_helperz")
class ObjectsHelper {
  /**
   * let array = new objecthelper()
   * @returns {any}
   */
  constructor() {

  }
  /**
   * @example
   * {{getTasksCompleted problem }} 
   */
  getTasksCompleted(object) {
    if (object.task.length >= 1) {
      let totalLength = object.task.length;
      let completed = arrz.countByCondition(object.task, "status", "done")
      return `${completed} / ${totalLength}`
    } else {
      return `0 / 0`
    }
  }

  /**
* @example
{{countByCondition problem "status" "to do"}}
*/
  countByCondition(object) {
    let count = arrz.countByCondition(array, key, value)
    console.log(count)
    return count;
  }

  /**
* @example
{{#each data as |problem|}}
{{countTaskPercentage problem "status" "doing"}}
{{#each data.tasks as |task|}}
{{countByCondition data.tasks "status" "doing"}}
{{/each}}
*/
  countTaskPercentage(object) {
    if (object.task.length >= 1) {
      let totalLength = object.task.length;
      let completed = arrz.countByCondition(object.task, "status", "done")
      let getPercentage = completed / totalLength * 100;
      getPercentage = getPercentage.toFixed(0)
      console.log("get percentage", getPercentage)
      return `${getPercentage}%`
    } else {
      return "0%"
    }
  }
}

let objects = new ObjectsHelper()
module.exports = { objects };