class HelpersIfElse {
    /**
     * let ifelse = new ifelse()
     * @returns {any}
     */
    constructor() {

        }
        /**
         * @example
         * {{#ifLength arr}}
         * {{problem}}
         * {{else}}
         * render this
         * {{/ifLength}}
         */
    ifLength(v1, options) {
        if (v1.length >= 1) {
            return options.fn(this);
        }
        return options.inverse(this);
    }

    /**
     * @example
     * {{#ifTaskArr arr}}
     * {{problem}}
     * {{else}}
     * render this
     * {{/ifTaskArr}}
     */
    ifTaskArr(v1, options) {
        if (v1.task.length >= 1) {
            return options.fn(this);
        }
        return options.inverse(this);
    }

    /**
     * @example
     * {{#ifCheatsheetArr arr}}
     * {{problem}}
     * {{else}}
     * render this
     * {{/ifCheatsheetArr}}
     */
    ifCheatsheetArr(v1, options) {
        if (v1.cheatsheet.length > 0) {
            return options.fn(this);
        }
        return options.inverse(this);
    }

    /**
     * @example
     *      * {{#ifProblemArr arr}}
     * {{problem}}
     * {{else}}
     * render this
     * {{/ifProblemArr}}
     */
    ifProblemArr(v1, options) {
        if (v1.problem.length > 0) {
            return options.fn(this);
        }
        return options.inverse(this);
    }

    /**
     * @example
     *      * {{#ifTagSnippetArr arr}}
     * {{problem}}
     * {{else}}
     * render this
     * {{/ifTagSnippetArr}}
     */
    ifTagSnippetArr(v1, options) {
        if (v1.tag_snippet.length > 0) {
            return options.fn(this);
        }
        return options.inverse(this);
    }

    /**
* @example
* {{#ifSecondArrayIsLonger problem task}}
array problem longer than task
{{else}}
not longer
{{/ifSecondArrayIsLonger}}
*/
    ifSecondArrayIsLonger(v1, v2, options) {
            if (v1.length >= v2.length) {
                return options.fn(this);
            }
            return options.inverse(this);
        }
        /**
* @example 
* {{#ifLengthGreaterThan task 3}}
length of task is greater than 3
{{else}}
not longer than one
{{/ifLengthGreaterThan}}
*/
    ifLengthGreaterThan(array, length, options) {
        if (array.length >= length) {
            return options.fn(this)
        } else {
            return options.inverse(this);
        }
    }

    /**
* @example
* {{#ifEmpty problem}}
hello
{{else}}
fill in this form
{{/ifEmpty}}
*/
    ifEmpty(array, options) {
        if (!array || array.length <= 0) {
            return options.fn(this);
        } else {
            return options.inverse(this);
        }
    }



}
let helpersIfElse = new HelpersIfElse()

module.exports = {
    helpersIfElse
}