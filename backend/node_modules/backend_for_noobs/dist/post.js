const { knex } = require("./knex");
const { getOneProblemById, getOneCheatsheetById, getOneTaskById, getOneTagSnippetById } = require("./getOne.js")
const { upset } = require("whats_wrong")
const ef = require("effective_knex")
const { getUserTimezone } = require("./getUserTimezone")

async function postUser(knex, userObject) {
    try {
        let postUser = await ef.post(knex, "user", userObject)
        return postUser
    } catch (error) {
        return upset(error, "postuser", "should be able to post user")
    }
}

async function postProblem(knex, problemObject) {
    try {
        let user_time = await getUserTimezone(knex, problemObject["user_id"])
        problemObject["start"] = user_time;
        let postHourglass = await ef.post(knex, "hourglass", problemObject)
        problemObject["hourglass_id"] = postHourglass.id
        let postProblem = await ef.post(knex, "problem", problemObject)
        let result = await getOneProblemById(knex, postProblem.user_id, postProblem.id)
        return result;
    } catch (error) {
        return upset(error, "post problem", "should be able to post user")
    }
}

async function postTask(knex, taskObject) {
    try {

        let user_time = await getUserTimezone(knex, taskObject["user_id"])
        taskObject["start"] = user_time;
        let postHourglass = await ef.post(knex, "hourglass", taskObject)
        taskObject["hourglass_id"] = postHourglass.id
        let postTask = await ef.post(knex, "task", taskObject)
        let task = await getOneTaskById(knex, postTask.user_id, postTask.id)
        return task;
    } catch (error) {
        return upset(error, "post task", "should be able to post user")
    }
}

async function postCheatsheet(knex, cheatsheet) {
    try {
        let user_time = await getUserTimezone(knex, cheatsheet["user_id"])
        cheatsheet["start"] = user_time;
        let postHourglass = await ef.post(knex, "hourglass", cheatsheet)
        cheatsheet["hourglass_id"] = postHourglass.id
        let postCheatsheet = await ef.post(knex, "cheatsheet", cheatsheet)
        let result = await getOneCheatsheetById(knex, postCheatsheet.user_id, postCheatsheet.id)
        return result;
    } catch (error) {
        return upset(error, "post cheatsheet", "should be able to post user")
    }
}
async function postTagSnippet(knex, tagSnippet) {
    try {
        let user_time = await getUserTimezone(knex, tagSnippet["user_id"])
        tagSnippet["start"] = user_time;
        let postHourglass = await ef.post(knex, "hourglass", tagSnippet)
        tagSnippet["hourglass_id"] = postHourglass.id
        let postTag = await ef.post(knex, "tag_snippet", tagSnippet)

        let result = await getOneTagSnippetById(knex, postTag.user_id, postTag.id)
        return result;
    } catch (error) {
        return upset(error, "post tag snippet", "should be able to post user")
    }
}



async function testPostProblem() {


    let sampleUser = {
            email: "lesleyc@bu.edu",
            password: "testtest"
        }
        // await postUser(knex, sampleUser).then((response) => {
        // console.log(response)
        // })
    let followThisUser = {
            email: "ryan@bu.edu",
            password: "testtest"
        }
        // await postUser(followThisUser).then((response) => {
        // console.log(response)
        // })

    let sampleObject = {
            user_id: 1,
            problem: "we are scared",
            whatshouldbe: "we should be less frightened",
            whatactuallyis: "we get scared all the time",
            hypothesis: "don't forget who loved you",
            plan: "Depend on love, rather than validation",
            difficulty: 2,
            usefulness: 3,
            end: "2022-03-27"
        }
        // await postProblem(knex, sampleObject).then((result) => {
        //     console.log(result)
        // })

    let sampleTask = {
            user_id: 1,
            name: "KEEP IT SIMPLE STUPID",
            difficulty: 2,
            usefulness: 1,
            importance: 1,
            end: "2022-03-15"
        }
        // await postTask(knex, sampleTask).then((result) => {
        //     console.log(result)
        // })

    let sampleCheatsheet = {
            user_id: 1,
            importance: 2,
            usefulness: 3,
            title: "getting things done",
            key_info: "just do it",
            description: "be more like water",
            structure: "think less"
        }
        // await postCheatsheet(knex, sampleCheatsheet).then((result) => {
        //     console.log(result)
        // })
    let sampleTagSnippet = {
        tag_snippet_id: 18,
        task_id: 4,
        hourglass_id: 330,
        tag: 'quote',
        snippet: 'be more selfish with your time. this is your life. reach your own goals. be more confident in yourself, you got this. i want cyrus on my team',
        user_id: 1,
        importance: 1,
        difficulty: 2,
        public: true,
        status: 'to do',
        usefulness: 1,
    }
    await postTagSnippet(knex, sampleTagSnippet).then((result) => {
        console.log(result)
    })
    let sampleFollowSomeone = {
            user_id: 1,
            follow_user_id: 2,
            edit: "2022-03-15"
        }
        // await postFollow(sampleFollowSomeone).then((response) => {
        //     console.log(response)
        // })


}
testPostProblem()


module.exports = { postUser, postProblem, postTask, postCheatsheet, postTagSnippet, testPostProblem };
module.exports = { postUser, postProblem, postTask, postCheatsheet, postTagSnippet, testPostProblem };