const arrz = require("array_helperz")
const { getAllTagSnippetJoins, getAllProblemJoins, getAllCheatsheetJoins, getAllTaskJoins } = require("./oneToMany.js")
const { knex } = require("./knex")


/**********************************************
 * Purpose
 * ==================================
 ***********************************************/

async function searchProblems(knex, user_id, string) {
    let all_problems = await getAllProblemJoins(knex, user_id)
    let result = arrz.filterValues(all_problems, string, ["problem", "whatactuallyis", "whatshouldbe", "hypothesis", "plan"])
    return result;
}
async function searchCheatsheets(knex, user_id, string) {
    let get_all = await getAllCheatsheetJoins(knex, user_id)
    let result = arrz.filterValues(get_all, string, ["title", "key_info", "description", "notes", "structure"])
    return result;
}
async function searchTasks(knex, user_id, string) {
    let get_all = await getAllTaskJoins(knex, user_id)
    let result = arrz.filterValues(get_all, string, ["name"])
    return result;
}
async function searchTagSnippets(knex, user_id, string) {
    let get_all = await getAllTagSnippetJoins(knex, user_id)
    let result = arrz.filterValues(get_all, string, ["tag", "snippet", "link"])
    return result;
}

async function searchAll(knex, user_id, string) {
    let problems = await searchProblems(knex, user_id, string)
    let cheatsheets = await searchCheatsheets(knex, user_id, string)
    let tasks = await searchCheatsheets(knex, user_id, string)
    let tags = await searchTagSnippets(knex, user_id, string)
    let newObj = { problem: problems, cheatsheet: cheatsheets, task: tasks, tag_snippet: tags }
    return newObj;
}
async function testSearch() {
    let string = "love"
    let problems = await searchProblems(knex, 1, string)
    console.log(problems[0])
    console.log(problems[problems.length - 1])
    let cheatsheets = await searchCheatsheets(knex, 1, string)
    let tasks = await searchTasks(knex, 1, string)
    let tags = await searchTagSnippets(knex, 1, string)
    let search = await searchAll(knex, 1, string)
}
// testSearch()

module.exports = { searchProblems, searchCheatsheets, searchTasks, searchTagSnippets, testSearch, searchAll };