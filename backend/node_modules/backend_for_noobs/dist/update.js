const ef = require("effective_knex")
const { getOneProblemById, getOneCheatsheetById, getOneTaskById, getOneTagSnippetById } = require("./getOne.js")
const { getOneTaskJoin, getOneCheatsheetJoin, getOneTagSnippetJoin, getOneProblemJoin } = require("./oneToMany.js")
const { knex } = require("./knex")
const { getUserTimezone } = require("./getUserTimezone")

async function updateProblem(knex, user_id, problem_id, object) {
    let user_time = await getUserTimezone(knex, user_id)
    object["edit"] = user_time;
    let problem_object = await getOneProblemById(knex, user_id, problem_id)
    let problem_update = await ef.update(knex, "problem", problem_object.problem_id, object)
    let hourglass_id = problem_object.hourglass_id
    let hourglass_update = await ef.update(knex, "hourglass", hourglass_id, object)
    let get_problem_update = await getOneProblemJoin(knex, user_id, problem_id)
    return get_problem_update;
}
async function updateCheatsheet(knex, user_id, cheatsheet_id, object) {
    let user_time = await getUserTimezone(knex, user_id)
    object["edit"] = user_time;
    let one_object = await getOneCheatsheetById(knex, user_id, cheatsheet_id)
    let update_object = await ef.update(knex, "cheatsheet", one_object.cheatsheet_id, object)
    let hourglass_id = update_object.hourglass_id
    let hourglass_update = await ef.update(knex, "hourglass", hourglass_id, object)
    let result = await getOneCheatsheetJoin(knex, user_id, cheatsheet_id)
    return result;
}
async function updateTask(knex, user_id, task_id, object) {
    let user_time = await getUserTimezone(knex, user_id)
    object["edit"] = user_time;
    let one_object = await getOneTaskById(knex, user_id, task_id)
    let update_object = await ef.update(knex, "task", one_object.task_id, object)
    let hourglass_id = update_object.hourglass_id
    object["edit"] = new Date()
    let hourglass_update = await ef.update(knex, "hourglass", hourglass_id, object)
    let result = await getOneTaskJoin(knex, user_id, task_id)
    return result;
}
async function updateTagSnippet(knex, user_id, tag_snippet_id, object) {
    let user_time = await getUserTimezone(knex, user_id)
    object["edit"] = user_time;
    let one_object = await getOneTagSnippetById(knex, user_id, tag_snippet_id)
    let update_object = await ef.update(knex, "task", one_object.tag_snippet_id, object)
    let hourglass_id = one_object.hourglass_id
    let hourglass_update = await ef.update(knex, "hourglass", hourglass_id, object)
    let result = await getOneTagSnippetJoin(knex, user_id, tag_snippet_id)
    return result;
}

async function testUpdate() {
    // let newProblem = await updateProblem(knex, 1, 1, { importance: 3, difficulty: 2 })
    // console.log("ðŸš€ ~ file: update.js ~ line 51 ~ testUpdate ~ newProblem", newProblem)
    // let newCheatsheet = await updateCheatsheet(knex, 1, 1, { importance: 2, difficulty: 2 })
    // console.log(newCheatsheet)
    // let newTask = await updateTask(knex, 1, 1, { importance: 2 })
    // console.log(newTask)
    // let newTagSnippet = await updateTagSnippet(knex, 1, 2, { importance: 1 })
    // console.log(newTagSnippet)
}
// testUpdate()

module.exports = { updateProblem, updateCheatsheet, updateTask, updateTagSnippet, testUpdate };